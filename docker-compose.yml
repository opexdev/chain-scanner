x-postgres-db: &postgres-db
  image: ghcr.io/opexdev/postgres-opex
  environment:
    - POSTGRES_USER=${DB_USER:-opex}
    - POSTGRES_PASSWORD=${DB_PASS:-hiopex}
    - POSTGRES_DB=opex_accountant
    - POSTGRES_BACKUP_USER=${DB_BACKUP_USER:-opex_backup}
    - POSTGRES_BACKUP_PASSWORD=${DB_BACKUP_PASS:-hiopex}
  networks:
    - default
  deploy:
    restart_policy:
      condition: on-failure

version: '3.8'
services:
  vault:
    image: ghcr.io/opexdev/vault-opex
    volumes:
      - vault-data:/vault/file
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - PANEL_PASS=${PANEL_PASS}
      - BACKEND_USER=${BACKEND_USER}
      - DB_USER=${DB_USER:-opex}
      - DB_PASS=${DB_PASS:-hiopex}
      - DB_BACKUP_USER=${DB_BACKUP_USER:-opex_backup}
      - DB_BACKUP_PASS=${DB_BACKUP_PASS:-hiopex}
    cap_add:
      - IPC_LOCK
  vault-ui:
    image: djenriquez/vault-ui
    environment:
      - VAULT_URL_DEFAULT=http://vault:8200
      - VAULT_AUTH_DEFAULT=USERNAMEPASSWORD
    depends_on:
      - vault
  consul:
    image: consul
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  postgres-scanner-scheduler:
    <<: *postgres-db
    volumes:
      - scanner-scheduler-data:/var/lib/postgresql/data/
  postgres-eth-scan:
    <<: *postgres-db
    volumes:
      - eth-scan-data:/var/lib/postgresql/data/
  postgres-bitcoin-scan:
    <<: *postgres-db
    volumes:
      - bitcoin-scan-data:/var/lib/postgresql/data/
  postgres-bsc-scan:
    <<: *postgres-db
    volumes:
      - bsc-scan-data:/var/lib/postgresql/data/
  postgres-tron-scan:
    <<: *postgres-db
    volumes:
      - tron-scan-data:/var/lib/postgresql/data/
  scanner-scheduler:
    image: ghcr.io/opexdev/scanner-scheduler
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    networks:
      - default
  eth-scan:
    image: ghcr.io/opexdev/eth-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
    depends_on:
      - postgres-eth-scan
    networks:
      - default
  bitcoin-scan:
    image: ghcr.io/opexdev/bitcoin-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
    depends_on:
      - postgres-bitcoin-scan
    networks:
      - default
  bsc-scan:
    image: ghcr.io/opexdev/eth-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
    depends_on:
      - postgres-bsc-scan
    networks:
      - default
  tron-scan:
    image: ghcr.io/opexdev/tron-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
    depends_on:
      - postgres-tron-scan
    networks:
      - default
volumes:
  vault-data:
  scanner-scheduler-data:
  eth-scan-data:
  bitcoin-scan-data:
  bsc-scan-data:
  tron-scan-data:
networks:
  default:
    driver: bridge
