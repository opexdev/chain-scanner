version: '3.8'
services:
  vault:
    image: ghcr.io/opexdev/vault-opex
    volumes:
      - vault-data:/vault/file
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - PANEL_PASS=${PANEL_PASS}
      - BACKEND_USER=${BACKEND_USER}
      - SMTP_PASS=${SMTP_PASS}
      - DB_USER=${DB_USER:-opex}
      - DB_PASS=${DB_PASS:-hiopex}
      - DB_BACKUP_USER=${DB_BACKUP_USER:-opex_backup}
      - DB_BACKUP_PASS=${DB_BACKUP_PASS:-hiopex}
      - KEYCLOAK_ADMIN_USERNAME=${KEYCLOAK_ADMIN_USERNAME:-opex-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-hiopex}
      - OPEX_ADMIN_KEYCLOAK_CLIENT_SECRET=${OPEX_ADMIN_KEYCLOAK_CLIENT_SECRET}
      - VANDAR_API_KEY=$VANDAR_API_KEY
    cap_add:
      - IPC_LOCK
  vault-ui:
    image: djenriquez/vault-ui
    environment:
      - VAULT_URL_DEFAULT=http://vault:8200
      - VAULT_AUTH_DEFAULT=USERNAMEPASSWORD
    depends_on:
      - vault
  consul:
    image: consul
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    networks:
      - default
    deploy:
      restart_policy:
        condition: on-failure
  eth-scan:
    image: ghcr.io/opexdev/eth-scan
    build: eth-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
      - RPC_ENDPOINT=${ETH_RPC_ENDPOINT}
    networks:
      - default
  bitcoin-scan:
    image: ghcr.io/opexdev/bitcoin-scan
    build: bitcoin-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
      - RPC_ENDPOINT=${BITCOIN_RPC_ENDPOINT}
      - REST_ENDPOINT=${BITCOIN_REST_ENDPOINT}
      - API_KEY=${BITCOIN_API_KEY}
    networks:
      - default
  bsc-scan:
    image: ghcr.io/opexdev/eth-scan
    build: eth-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
      - APPLICATION_NAME=bsc-scan
      - RPC_ENDPOINT=${BSC_RPC_ENDPOINT}
    networks:
      - default
  tron-scan:
    image: ghcr.io/opexdev/tron-scan
    build: tron-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
      - APPLICATION_NAME=tron-scan
      - REST_ENDPOINT=${TRON_REST_ENDPOINT}
      - API_KEY=${TRON_API_KEY}
    networks:
      - default
  test-eth-scan:
    image: ghcr.io/opexdev/eth-scan
    build: eth-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
      - APPLICATION_NAME=test-eth-scan
      - RPC_ENDPOINT=${TEST_ETH_RPC_ENDPOINT}
    networks:
      - default
  test-bitcoin-scan:
    image: ghcr.io/opexdev/bitcoin-scan
    build: bitcoin-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
      - APPLICATION_NAME=test-bitcoin-scan
      - RPC_ENDPOINT=${TEST_BITCOIN_RPC_ENDPOINT}
      - REST_ENDPOINT=${TEST_BITCOIN_REST_ENDPOINT}
      - API_KEY=${TEST_BITCOIN_API_KEY}
    networks:
      - default
  test-bsc-scan:
    image: ghcr.io/opexdev/eth-scan
    build: eth-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - CONSUL_HOST=consul
      - APPLICATION_NAME=test-bsc-scan
      - RPC_ENDPOINT=${TEST_BSC_RPC_ENDPOINT}
    networks:
      - default
volumes:
  vault-data:
  scan-gateway-data:
networks:
  default:
    driver: bridge
