version: '3.8'
services:
  postgres-gateway:
    image: "postgres"
    environment:
      - POSTGRES_USER=opex
      - POSTGRES_PASSWORD=hiopex
      - POSTGRES_DB=gateway
    volumes:
      - $DATA/scan-gateway-data:/var/lib/postgresql/data/
    networks:
      - default
  gateway:
    build:
      context: ./gateway
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044
      - CONSUL_HOST=consul
      - DB_IP_PORT=postgres-gateway
      - VAULT_HOST=vault
    networks:
      - default
    depends_on:
      - postgres-gateway
    deploy:
      restart_policy:
        condition: on-failure
  eth-scan:
    build:
      context: ./eth-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044
      - CONSUL_HOST=consul
      - RPC_ENDPOINT=${ETH_RPC_ENDPOINT}
    networks:
      - default
  bitcoin-scan:
    build:
      context: ./bitcoin-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044
      - CONSUL_HOST=consul
      - RPC_ENDPOINT=${BITCOIN_RPC_ENDPOINT}
      - REST_ENDPOINT=${BITCOIN_REST_ENDPOINT}
      - API_KEY=${BITCOIN_API_KEY}
    networks:
      - default
  bsc-scan:
    build:
      context: ./eth-scan
    environment:
      - JAVA_OPTS=-Xmx256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044
      - CONSUL_HOST=consul
      - APPLICATION_NAME=bsc-scan
      - RPC_ENDPOINT=${BSC_RPC_ENDPOINT}
    networks:
      - default
networks:
  default:
    name: ${DEFAULT_NETWORK_NAME:-opex}
    driver: bridge
